<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Animated Nature Calculator</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }

    body {
      margin: 0;
      padding: 0;
      height: 100vh;
      background: url('https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=1400&q=80') no-repeat center center/cover;
      animation: bgZoom 30s ease-in-out infinite alternate;
      display: flex;
      justify-content: center;
      align-items: center;
      backdrop-filter: brightness(0.8);
    }

    @keyframes bgZoom {
      0% {
        background-size: 100%;
      }
      100% {
        background-size: 110%;
      }
    }

    .calculator {
      background: rgba(255, 255, 255, 0.95);
      border-radius: 20px;
      padding: 25px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
      width: 350px;
      backdrop-filter: blur(5px);
      animation: fadeIn 1s ease forwards;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: scale(0.95);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    .display {
      height: 70px;
      background: #222;
      color: #0f0;
      font-size: 32px;
      padding: 15px;
      text-align: right;
      border-radius: 10px;
      margin-bottom: 20px;
      overflow-x: auto;
      box-shadow: inset 0 0 6px #000;
    }

    .buttons {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 15px;
    }

    button {
      padding: 20px;
      font-size: 20px;
      border: none;
      border-radius: 12px;
      cursor: pointer;
      transition: all 0.2s ease;
      background: linear-gradient(145deg, #f0f0f0, #ffffff);
      box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.2);
    }

    button:hover {
      transform: scale(1.08);
      background: linear-gradient(145deg, #d1e8ff, #f0faff);
      box-shadow: 0 0 10px #00bcd4;
    }

    .btn-operator {
      background: linear-gradient(to right, #ff6a00, #ee0979);
      color: white;
    }

    .btn-operator:hover {
      background: linear-gradient(to right, #ee0979, #ff6a00);
    }

    .btn-equal {
      background: linear-gradient(to right, #00c853, #64dd17);
      color: white;
      grid-column: span 2;
    }

    .btn-clear {
      background: linear-gradient(to right, #e53935, #d32f2f);
      color: white;
    }

    @media (max-width: 400px) {
      .calculator {
        width: 90%;
      }
    }
  </style>
</head>
<body>

  <div class="calculator">
    <div class="display" id="display">0</div>
    <div class="buttons">
      <button class="btn-clear" onclick="clearDisplay()">C</button>
      <button class="btn-operator" onclick="appendOperator('/')">÷</button>
      <button class="btn-operator" onclick="appendOperator('*')">×</button>
      <button class="btn-operator" onclick="appendOperator('-')">−</button>

      <button onclick="appendNumber('7')">7</button>
      <button onclick="appendNumber('8')">8</button>
      <button onclick="appendNumber('9')">9</button>
      <button class="btn-operator" onclick="appendOperator('+')">+</button>

      <button onclick="appendNumber('4')">4</button>
      <button onclick="appendNumber('5')">5</button>
      <button onclick="appendNumber('6')">6</button>
      <button onclick="appendNumber('1')">1</button>

      <button onclick="appendNumber('2')">2</button>
      <button onclick="appendNumber('3')">3</button>
      <button onclick="appendNumber('0')">0</button>
      <button onclick="appendNumber('.')">.</button>

      <button class="btn-equal" onclick="calculate()">=</button>
    </div>
  </div>

  <script>
    const display = document.getElementById('display');
    let currentInput = '';

    function appendNumber(num) {
      if (currentInput === '0' && num !== '.') {
        currentInput = num;
      } else {
        currentInput += num;
      }
      display.innerText = currentInput;
    }

    function appendOperator(operator) {
      if (currentInput === '') return;
      const lastChar = currentInput.slice(-1);
      if (['+', '-', '*', '/'].includes(lastChar)) {
        currentInput = currentInput.slice(0, -1) + operator;
      } else {
        currentInput += operator;
      }
      display.innerText = currentInput;
    }

    function clearDisplay() {
      currentInput = '';
      display.innerText = '0';
    }

    function calculate() {
      try {
        currentInput = eval(currentInput).toString();
        display.innerText = currentInput;
      } catch (e) {
        display.innerText = 'Error';
        currentInput = '';
      }
    }

    // Keyboard support
    document.addEventListener('keydown', (e) => {
      const key = e.key;
      if (!isNaN(key) || key === '.') {
        appendNumber(key);
      } else if (['+', '-', '*', '/'].includes(key)) {
        appendOperator(key);
      } else if (key === 'Enter') {
        e.preventDefault();
        calculate();
      } else if (key === 'Backspace') {
        currentInput = currentInput.slice(0, -1);
        display.innerText = currentInput || '0';
      } else if (key.toLowerCase() === 'c') {
        clearDisplay();
      }
    });
  </script>

</body>
</html>
